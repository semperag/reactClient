{"version":3,"sources":["actions.js","Memory.js","App.js","reducer.js","store.js","index.js"],"names":["setOriginalFetch","window","fetch","progressBarFetch","Action","Object","freeze","LoadMemories","FinishAddingMemory","EnterEditMode","LeaveEditMode","FinishSavingMemory","FinishDeletingMemory","checkForErrors","response","ok","Error","status","statusText","host","loadDay","month","day","dispatch","then","json","data","memories","type","payload","catch","e","console","error","startAddingMemory","year","start_time","end_time","message","memory","options","method","headers","body","JSON","stringify","id","finishAddingMemory","startSavingMemory","finishSavingMemory","startDeletingMemory","finishDeletingMemory","Memory","props","useDispatch","useState","setMessage","edit_font_size","edit_border_size","isEditing","className","style","bottom","height","zIndex","boxShadow","onClick","leaveEditMode","value","placeholder","onChange","target","fontSize","border","enterEditMode","date","Date","getFullYear","getMonth","getDate","weekday","Array","months","App","start","setStart","end","setEnd","year_date","setYear","month_date","setMonth","day_date","setDay","day_number","setDayNumber","today","useSelector","state","useEffect","startTime","parseInt","endTime","heightNumber","looper","loading_day","loading_month","map","initialState","isWaiting","reducer","action","undefined","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b91eda40.chunk.js","sourcesContent":["import {progressBarFetch, setOriginalFetch} from 'react-fetch-progressbar';\r\nsetOriginalFetch(window.fetch);\r\nwindow.fetch = progressBarFetch;\r\n\r\nexport const Action = Object.freeze({\r\n    LoadMemories: 'LoadMemories',\r\n    FinishAddingMemory: 'FinishAddingMemory',\r\n    EnterEditMode: 'EnterEditMode',\r\n    LeaveEditMode: 'LeaveEditMode',\r\n    FinishSavingMemory: 'FinishSavingMemory',\r\n    FinishDeletingMemory: 'FinishDeletingMemory',\r\n});\r\n\r\nexport function loadMemories(memories) {\r\n    return {\r\n        type: Action.LoadMemories,\r\n        payload: memories,\r\n    };\r\n}\r\n\r\nexport function finishAddingMemory(memory) {\r\n    return {\r\n        type: Action.FinishAddingMemory,\r\n        payload: memory,\r\n    };\r\n}\r\n\r\nexport function finishSavingMemory(memory) {\r\n    return {\r\n        type: Action.FinishSavingMemory,\r\n        payload: memory,\r\n    };\r\n}\r\n\r\nexport function finishDeletingMemory(memory) {\r\n    return {\r\n        type: Action.FinishDeletingMemory,\r\n        payload: memory,\r\n    };\r\n}\r\n\r\nexport function enterEditMode(memory) {\r\n    return {\r\n        type: Action.EnterEditMode,\r\n        payload: memory,\r\n    };\r\n}\r\n\r\nexport function leaveEditMode(memory) {\r\n    return {\r\n        type: Action.LeaveEditMode,\r\n        payload: memory,\r\n    };\r\n}\r\n\r\nfunction checkForErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(`${response.status}: ${response.statusText}`);\r\n    }\r\n    return response;\r\n}\r\n\r\nconst host = 'https://project2.handsdownbestproject.me:8442';\r\n\r\nexport function loadDay(month, day) {\r\n    return dispatch => {\r\n        fetch(`${host}/memories/${month}/${day}`)\r\n            .then(checkForErrors)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.ok) {\r\n                    dispatch(loadMemories(data.memories));\r\n                }\r\n            })\r\n            .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\nexport function startAddingMemory(year, month, day, start_time, end_time, message) {\r\n    const memory = {year, month, day, start_time, end_time, message};\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(memory),\r\n    }\r\n\r\n    return dispatch => {\r\n        fetch(`${host}/memories`, options)\r\n            .then(checkForErrors)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.ok) {\r\n                    memory.id = data.id;\r\n                    dispatch(finishAddingMemory(memory));\r\n                }\r\n            })\r\n            .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\nexport function startSavingMemory(memory) {\r\n    const options = {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(memory),\r\n    }\r\n\r\n    return dispatch => {\r\n        fetch(`${host}/memories/${memory.id}`, options)\r\n            .then(checkForErrors)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.ok) {\r\n                    dispatch(finishSavingMemory(memory));\r\n                }\r\n            })\r\n            .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\nexport function startDeletingMemory(memory) {\r\n    const options = {\r\n        method: 'DELETE',\r\n    };\r\n\r\n    return dispatch => {\r\n        fetch(`${host}/memories/${memory.id}`, options)\r\n            .then(checkForErrors)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.ok) {\r\n                    dispatch(finishDeletingMemory(memory));\r\n                }\r\n            })\r\n            .catch(e => console.error(e));\r\n    };\r\n}","import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {enterEditMode, leaveEditMode, startSavingMemory, startDeletingMemory} from './actions';\r\n\r\nexport function Memory(props) {\r\n    const memory = props.memory;\r\n    const dispatch = useDispatch();\r\n    const [year] = useState(memory.year);\r\n    const [month] = useState(memory.month);\r\n    const [day] = useState(memory.day);\r\n    const [message, setMessage] = useState(memory.message);\r\n\r\n    const onEdit = () => {\r\n        dispatch(enterEditMode(memory));\r\n    }\r\n\r\n    const onCancel = () => {\r\n        dispatch(leaveEditMode(memory));\r\n    }\r\n\r\n    const onSave = () => {\r\n        dispatch(startSavingMemory({\r\n            id: memory.id,\r\n            year,\r\n            month,\r\n            day,\r\n            message,\r\n            start_time: memory.start_time,\r\n            end_time: memory.end_time\r\n            \r\n        }));\r\n    }\r\n\r\n    const onDelete = () => {\r\n        dispatch(startDeletingMemory(memory));\r\n    }\r\n\r\n    let edit_font_size = 1;\r\n    let edit_border_size = 3;\r\n\r\n    if (memory.end_time > 50) {\r\n        edit_font_size = 1.5;\r\n        edit_border_size = 7;\r\n    }\r\n\r\n    if (memory.isEditing) {\r\n        return (\r\n            <div className=\"time-slot\" style={{\r\n                bottom: (memory.start_time - (196 - memory.end_time)) + 'px',\r\n                height: 196 + 'px',\r\n                zIndex: '1'\r\n            }}>\r\n                <div className=\"memory\" style={{\r\n                    boxShadow: '5px 10px 8px #888888'\r\n                }}>\r\n                    <div className=\"memory-left\">\r\n                    \r\n                        <button id=\"save\" onClick={onSave}>save</button>\r\n                        <button id=\"cancel\" onClick={onCancel}>cancel</button>\r\n                        <button id=\"delete\" onClick={onDelete} className='delete-button'>delete</button>\r\n                    </div>\r\n                    <div className=\"memory-right\">\r\n                        <textarea id=\"event-text\" value={message} placeholder=\"Event Title\" \r\n                        onChange={e => setMessage(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            \r\n            <div className=\"time-slot\" style={{\r\n                bottom: memory.start_time + 'px',\r\n                height: memory.end_time + 'px',\r\n            }}>\r\n                <div className=\"memory\" style={{\r\n                    boxShadow: '5px 10px 8px #888888'\r\n                }}>\r\n                    <div className=\"memory-left\">\r\n                        <button id=\"edit\" style={{\r\n                            fontSize: edit_font_size + 'em',\r\n                            border: edit_border_size + 'px solid rgb(118, 119, 195)',\r\n                        }}\r\n                        onClick={onEdit}>edit</button>\r\n                    </div>\r\n                    <div className=\"memory-right\">\r\n                        {memory.message}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Memory} from './Memory';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {loadDay, startAddingMemory} from './actions';\nimport {ProgressBar} from 'react-fetch-progressbar';\n\nconst date = new Date();\nconst year = date.getFullYear();\nconst month = date.getMonth() + 1;\nconst day = date.getDate();\n\nvar weekday = new Array(7);\nweekday[0]=\"Monday\";\nweekday[1]=\"Tuesday\";\nweekday[2]=\"Wednesday\";\nweekday[3]=\"Thursday\";\nweekday[4]=\"Friday\";\nweekday[5]=\"Saturday\";\nweekday[6]=\"Sunday\";\n\nconst months = [[], [\"January\", 31], [\"February\", 28], [\"March\", 31],\n[\"April\", 30], [\"May\", 31], [\"June\", 30], [\"July\", 31], \n[\"August\", 31], [\"September\", 30], [\"October\", 31],\n[\"November\", 30], [\"December\", 31]];\n\nfunction App() {\n\n  const [start, setStart] = useState(1);\n  const [end, setEnd] = useState(2);\n  const [message, setMessage] = useState('');\n  const [year_date, setYear] = useState(year);\n  const [month_date, setMonth] = useState(month);\n  const [day_date, setDay] = useState(day);\n  const [day_number, setDayNumber] = useState(day);\n\n  let today = months[month_date][0] + \" \" + day_date + \", \" + year_date ;\n\n  const memories = useSelector(state => state.memories);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDay(month, day));\n  }, [dispatch]);\n\n  let startTime = (24 - parseInt(start)) * 50;\n  let endTime = (24 - parseInt(end)) * 50 ;\n  let heightNumber = startTime - endTime - 4;\n  let looper = heightNumber;\n\n  while (looper > 46) {\n    startTime = startTime - 50;\n    looper = looper - 50;\n  }\n  startTime = startTime + 144;\n\n  const onAdd = () => {\n    dispatch(startAddingMemory(year_date, month_date, day_date, startTime, heightNumber, message));\n  }\n\n  const nextDay = () => {\n    let loading_day = day_date;\n    let loading_month = month_date;\n\n    if (day_date === months[month_date][1]) {\n      setDay(1);\n      loading_day = 1;\n      if (month_date === 12) {\n        setMonth(1);\n        setYear(year_date + 1)\n        loading_month = 1;\n      } else {\n        setMonth(month_date + 1);\n        loading_month = loading_month + 1;\n      }\n    } else {\n      setDay(day_date + 1);\n      loading_day = loading_day + 1;\n    }\n\n    setDayNumber(day_number + 1);\n\n    dispatch(loadDay(loading_month, loading_day));\n  }\n\n  const prevDay = () => {\n    let loading_day = day_date;\n    let loading_month = month_date;\n\n    if (day_date === 1) {\n      if (month_date === 1) {\n        setMonth(12);\n        setDay(months[12][1]);\n        setYear(year_date - 1);\n        loading_day = months[12][1];\n        loading_month = 12;\n      } else {\n        setMonth(month_date - 1);\n        setDay(months[month_date - 1][1]);\n        loading_day = months[month_date - 1][1];\n        loading_month = loading_month - 1;\n      }\n    } else {\n      setDay(day_date - 1);\n      loading_day = loading_day - 1;\n    }\n\n    if (day_number === 0) {\n      setDayNumber(6);\n    } else {\n      setDayNumber(day_number - 1);\n    }\n\n    dispatch(loadDay(loading_month, loading_day));\n  }\n\n  return (\n    <div className=\"memories-root\">\n      <div id=\"app-name\">\n        <span id=\"calendar\">Calendar</span> \n        <div className=\"loader\"></div>\n      </div>\n      <div id=\"date\">\n        <button className=\"date-button\" onClick={prevDay}>&lt;</button>\n        <span> </span>\n        <button className=\"date-button\" onClick={nextDay}>&gt;</button>\n        <span id=\"today-date\">{today}</span>\n      </div>\n      <ProgressBar/>\n      <div id=\"calendar-day\">\n      <div id=\"calendar-times\">\n          <div id=\"time-selectors\">\n              <div className=\"selector\">\n                <select className=\"times\"\n                    value={start}\n                    onChange={e => setStart(parseInt(e.target.value))}\n                >\n                    <option value=\"1\">12:00am</option>\n                    <option value=\"2\">1:00am</option>\n                    <option value=\"3\">2:00am</option>\n                    <option value=\"4\">3:00am</option>\n                    <option value=\"5\">4:00am</option>\n                    <option value=\"6\">5:00am</option>\n                    <option value=\"7\">6:00am</option>\n                    <option value=\"8\">7:00am</option>\n                    <option value=\"9\">8:00am</option>\n                    <option value=\"10\">9:00am</option>\n                    <option value=\"11\">10:00am</option>\n                    <option value=\"12\">11:00am</option>\n                    <option value=\"13\">12:00pm</option>\n                    <option value=\"14\">1:00pm</option>\n                    <option value=\"15\">2:00pm</option>\n                    <option value=\"16\">3:00pm</option>\n                    <option value=\"17\">4:00pm</option>\n                    <option value=\"18\">5:00pm</option>\n                    <option value=\"19\">6:00pm</option>\n                    <option value=\"20\">7:00pm</option>\n                    <option value=\"21\">8:00pm</option>\n                    <option value=\"22\">9:00pm</option>\n                    <option value=\"23\">10:00pm</option>\n                    <option value=\"24\">11:00pm</option>\n                </select>\n              </div>\n\n              <span id=\"select-between\"> &ndash; </span>\n\n              <div className=\"selector\">\n                <select className=\"times\"\n                    value={end}\n                    onChange={e => setEnd(parseInt(e.target.value))}\n                >\n                    <option value=\"2\">1:00am</option>\n                    <option value=\"3\">2:00am</option>\n                    <option value=\"4\">3:00am</option>\n                    <option value=\"5\">4:00am</option>\n                    <option value=\"6\">5:00am</option>\n                    <option value=\"7\">6:00am</option>\n                    <option value=\"8\">7:00am</option>\n                    <option value=\"9\">8:00am</option>\n                    <option value=\"10\">9:00am</option>\n                    <option value=\"11\">10:00am</option>\n                    <option value=\"12\">11:00am</option>\n                    <option value=\"13\">12:00pm</option>\n                    <option value=\"14\">1:00pm</option>\n                    <option value=\"15\">2:00pm</option>\n                    <option value=\"16\">3:00pm</option>\n                    <option value=\"17\">4:00pm</option>\n                    <option value=\"18\">5:00pm</option>\n                    <option value=\"19\">6:00pm</option>\n                    <option value=\"20\">7:00pm</option>\n                    <option value=\"21\">8:00pm</option>\n                    <option value=\"22\">9:00pm</option>\n                    <option value=\"23\">10:00pm</option>\n                    <option value=\"24\">11:00pm</option>\n                </select>\n              </div>\n              <textarea id=\"event\" value={message} placeholder=\"Event Title\"\n              onChange={e =>setMessage(e.target.value)}/>\n              <button id=\"insert\" onClick={onAdd}>New Event</button>\n          </div>\n                    \n          <div id=\"left-cal\">\n              <div className=\"time\">1 AM</div>\n              <div className=\"time\">2 AM</div>\n              <div className=\"time\">3 AM</div>\n              <div className=\"time\">4 AM</div>\n              <div className=\"time\">5 AM</div>\n              <div className=\"time\">6 AM</div>\n              <div className=\"time\">7 AM</div>\n              <div className=\"time\">8 AM</div>\n              <div className=\"time\">9 AM</div>\n              <div className=\"time\">10 AM</div>\n              <div className=\"time\">11 AM</div>\n              <div className=\"time\">12 PM</div>\n              <div className=\"time\">1 PM</div>\n              <div className=\"time\">2 PM</div>\n              <div className=\"time\">3 PM</div>\n              <div className=\"time\">4 PM</div>\n              <div className=\"time\">5 PM</div>\n              <div className=\"time\">6 PM</div>\n              <div className=\"time\">7 PM</div>\n              <div className=\"time\">8 PM</div>\n              <div className=\"time\">9 PM</div>\n              <div className=\"time\">10 PM</div>\n              <div className=\"time\">11 PM</div>\n          </div>\n          <div id=\"right-cal\">\n            <div id=\"today\">{weekday[(day_number % 7)]}</div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              <div className=\"time-block\"></div>\n              \n              {memories.map(memory => <Memory key={memory.id} memory={memory} />)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {Action} from './actions';\r\n\r\nconst initialState = {\r\n    isWaiting: false,\r\n    memories: [],\r\n}\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Action.LoadMemories:\r\n            return {\r\n                ...state,\r\n                memories: action.payload,\r\n            }\r\n        case Action.FinishAddingMemory:\r\n            return {\r\n                ...state,\r\n                memories: [{...action.payload, isEditing: false},\r\n                     ...state.memories],\r\n            }\r\n        case Action.EnterEditMode:\r\n            return {\r\n                ...state,\r\n                memories: state.memories.map(memory => {\r\n                    if (memory.id === action.payload.id) {\r\n                        return {...memory, isEditing: true};\r\n                    } else {\r\n                        return memory;\r\n                    }\r\n                }),\r\n            }\r\n        case Action.LeaveEditMode:\r\n            return {\r\n                ...state,\r\n                memories: state.memories.map(memory => {\r\n                    if (memory.id === action.payload.id) {\r\n                        return {...memory, isEditing: undefined};\r\n                    } else {\r\n                        return memory;\r\n                    }\r\n                }),\r\n            }\r\n        case Action.FinishSavingMemory:\r\n            return {\r\n                ...state,\r\n                memories: state.memories.map(memory => {\r\n                    if (memory.id === action.payload.id) {\r\n                        return action.payload;\r\n                    } else {\r\n                        return memory;\r\n                    }\r\n                }),\r\n            }\r\n        case Action.FinishDeletingMemory:\r\n            return {\r\n                ...state,\r\n                memories: state.memories.filter(memory =>\r\n                    memory.id !== action.payload.id),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}